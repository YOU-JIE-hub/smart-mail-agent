#!/usr/bin/env bash
set -Eeuo pipefail
# 開除錯可設 SMARUN_DEBUG=1
[[ "${SMARUN_DEBUG:-0}" == "1" ]] && set -x

# 一定是：先進專案，再開環境
ROOT="$(cd "$(dirname "$0")/.." && pwd)"
cd "$ROOT"

# venv
if [[ ! -f .venv/bin/activate ]]; then
  python3 -m venv .venv
fi
# shellcheck disable=SC1091
. .venv/bin/activate

# pip 永不互動，避免卡住；允許用 SKIP_DEPS=1 跳過安裝
export PIP_DISABLE_PIP_VERSION_CHECK=1 PIP_NO_INPUT=1
if [[ -f requirements.txt && ! -f .venv/.deps_installed && "${SKIP_DEPS:-0}" != "1" ]]; then
  python -m pip install -U pip
  pip install -r requirements.txt
  touch .venv/.deps_installed
fi

: "${SMA_LOG_DIR:=logs}"
mkdir -p "$SMA_LOG_DIR" data/output

# 沒參數就跑 sample；有參數就把參數丟給 handler
if [[ $# -eq 0 ]]; then
  [[ -f data/output/in_sales.json ]] || cat > data/output/in_sales.json <<'JSON'
{"subject":"合作報價與時程 2025-08-20","from":"alice@biz.com","body":"想確認報價與時程。"}
JSON
  [[ -f data/output/in_complaint.json ]] || cat > data/output/in_complaint.json <<'JSON'
{"subject":"嚴重投訴","from":"bob@example.com","body":"配送延誤，請協助處理。"}
JSON

  PYTHONPATH=src python -m src.run_action_handler --input data/output/in_sales.json --output data/output/out_sales.json --dry-run
  PYTHONPATH=src python -m src.run_action_handler --input data/output/in_complaint.json --output data/output/out_complaint.json --dry-run
else
  PYTHONPATH=src python -m src.run_action_handler "$@"
fi

echo "log file: $SMA_LOG_DIR/sma-$(date +%Y%m%d).jsonl"
tail -n 10 "$SMA_LOG_DIR/sma-$(date +%Y%m%d).jsonl" || true
