name: tests
on:
  push:
    branches: [ "main", "cleanup/**" ]
  pull_request:
    branches: [ "main" ]

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install ruff & pre-commit
        run: |
          python -m pip install -U pip
          python -m pip install ruff pre-commit
      - name: Ruff check
        run: ruff check .
      - name: Ruff format --check
        run: ruff format --check .

  unit_contracts_fast:
    name: unit & contracts (fast)
    runs-on: ubuntu-latest
    needs: [lint]
    env:
      PYTHONPATH: ${{ github.workspace }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install (editable + dev + reqs)
        run: |
          python -m pip install -U pip
          python -m pip install -e ".[dev]"
          if [ -f requirements.txt ]; then python -m pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then python -m pip install -r requirements-dev.txt; fi
      - name: Sanity dump
        run: |
          python - <<'PY'
          import sys, pkgutil, smart_mail_agent as s
          print("PY:", sys.version)
          print("smart_mail_agent:", getattr(s,"__version__","(n/a)"))
          print("has compat src.spam? ", bool(pkgutil.find_loader("src.spam")))
          PY
      - name: Run unit & contracts (verbose + coverage + junit)
        run: |
          mkdir -p artifacts
          pytest tests/unit tests/contracts -vv --maxfail=1 --cov=smart_mail_agent --cov-report=xml:artifacts/coverage.xml --junitxml=artifacts/unit_contracts.junit.xml | tee artifacts/unit_contracts.log
      - name: Upload unit artifacts (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: unit-contracts-artifacts
          path: artifacts/

  offline_all:
    name: offline e2e+unit
    runs-on: ubuntu-latest
    needs: [unit_contracts_fast]   # 即使上一步 fail，此 job 仍會跑（故加上 if）
    if: always()
    env:
      PYTHONPATH: ${{ github.workspace }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install (editable + dev + reqs)
        run: |
          python -m pip install -U pip
          python -m pip install -e ".[dev]"
          if [ -f requirements.txt ]; then python -m pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then python -m pip install -r requirements-dev.txt; fi
      - name: Run all offline tests (verbose + coverage + junit)
        run: |
          mkdir -p artifacts
          pytest tests -k "not online" -vv --cov=smart_mail_agent --cov-append --cov-report=xml:artifacts/coverage.xml --junitxml=artifacts/offline.junit.xml | tee artifacts/offline.log
      - name: Upload offline artifacts (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: offline-artifacts
          path: artifacts/

  coverage:
    name: upload coverage (codecov)
    runs-on: ubuntu-latest
    needs: [offline_all]
    if: always()
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: offline-artifacts
          path: artifacts
      - name: Upload to Codecov (public repo tokenless)
        uses: codecov/codecov-action@v4
        with:
          files: artifacts/coverage.xml
          verbose: true
