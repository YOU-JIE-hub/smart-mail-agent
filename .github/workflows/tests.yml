name: tests
on: [push, pull_request]
permissions:
  contents: write
jobs:
  unit-and-coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install deps (minimal)
        run: |
          python -m venv .venv
          . .venv/bin/activate
          pip install -U pip coverage pytest python-dotenv PyYAML Jinja2 reportlab pydantic 'genbadge[coverage]' coverage-badge
      - name: Run unit + contracts (offline)
        env:
          PYTEST_DISABLE_PLUGIN_AUTOLOAD: "1"
          PYTHONPATH: ".:src"
          OFFLINE: "1"
          OMP_NUM_THREADS: "1"
          MKL_NUM_THREADS: "1"
          NUMEXPR_MAX_THREADS: "1"
        run: |
          . .venv/bin/activate
          pytest -q tests/unit tests/contracts
      - name: Focused coverage (modules/quotation.py) & publish badge
        env:
          PYTHONPATH: ".:src"
          OFFLINE: "1"
        run: |
          . .venv/bin/activate
          coverage erase
          coverage run --branch --source=modules scripts/cov_focus_modules.py
          coverage xml -i --include="*/modules/quotation.py" -o coverage.xml
          mkdir -p badges
          (genbadge coverage -i coverage.xml -o badges/coverage.svg || coverage-badge -i coverage.xml -o badges/coverage.svg -f)
          if [ "${GITHUB_REF}" = "refs/heads/main" ]; then
            git config user.name  "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            TS=$(date +%s)
            else
            fi
            git commit -m "chore(ci): update coverage badge (quotation-only) [skip ci]" || echo "no changes"
            git push
          fi
