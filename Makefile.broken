#!/usr/bin/env python3
            # 檔案位置：Makefile
            # 模組用途：自動建立 venv、安裝依賴、格式化、靜態檢查、測試、稽核

            VENV := .venv
            PY := $(VENV)/bin/python
            PIP := $(VENV)/bin/pip
            ISORT := $(VENV)/bin/isort
            BLACK := $(VENV)/bin/black
            FLAKE8 := $(VENV)/bin/flake8
            MYPY := $(VENV)/bin/mypy
            PRECOMMIT := $(VENV)/bin/pre-commit
            PYTEST := $(VENV)/bin/pytest

            .PHONY: init deps dev-tools fmt lint test audit all clean ci

            $(PY):
	python -m venv $(VENV)

            deps: $(PY)
	. $(VENV)/bin/activate && pip install -U pip
	$(PIP) install -r requirements.txt || true

            $(ISORT): deps
	$(PIP) install isort

            $(BLACK): deps
	$(PIP) install black

            $(FLAKE8): deps
	$(PIP) install flake8

            $(MYPY): deps
	$(PIP) install mypy

            $(PRECOMMIT): deps
	$(PIP) install pre-commit

            dev-tools: $(ISORT) $(BLACK) $(FLAKE8) $(MYPY) $(PRECOMMIT)

            init: deps dev-tools
	$(PRECOMMIT) install || true

            fmt: dev-tools
	$(ISORT) .
	$(BLACK) .

            lint: dev-tools
	$(FLAKE8) --config .flake8 .
	- $(MYPY) --exclude '(^|/)(\.venv|data|build|dist)/' src

            test: deps
	PYTHONPATH=src $(PYTEST) -q

            audit: deps
	$(PY) tools/repo_tidy.py --check || true
	$(PY) tools/project_catalog.py || true

            all: init fmt lint test audit

            ci: deps
	$(BLACK) --check .
	$(ISORT) --check-only .
	$(FLAKE8) --config .flake8 .
	PYTHONPATH=src $(PYTEST) -q

            clean:
	rm -rf $(VENV) .pytest_cache .mypy_cache .coverage
	find . -name "__pycache__" -type d -exec rm -rf {} +

# === Docker / Compose targets (auto-added) ===
.PHONY: docker-build docker-run docker-stop compose-up compose-down

docker-build:
	@docker build -t smart-mail-agent:dev .

docker-run:
	@docker run --rm -it \
		--env-file .env \
		-v $$PWD/data:/app/data \
		smart-mail-agent:dev bash -lc 'bash scripts/docker_entry.sh'

docker-stop:
	@docker ps -q --filter 'ancestor=smart-mail-agent:dev' | xargs -r docker stop

compose-up:
	@docker compose up -d --build

compose-down:
	@docker compose down

.PHONY: online-check
online-check:
	. .venv/bin/activate && python scripts/online_check.py || true

.PHONY: smtp-test-online
smtp-test-online:
	OFFLINE=0 PYTHONPATH=src .venv/bin/pytest -q -m online -k mailer_online -s

\
# === GitHub CLI / Secrets / CI ===
gh-install:
\t@sudo apt update && sudo apt install -y gh || true

gh-login:
\t@gh auth status || gh auth login

gh-secrets:
\t@tools/push_secrets_from_env.sh

ci-smtp:
\t@gh workflow run "SMTP Online Test" || gh workflow run ".github/workflows/smtp-online.yml"

ci-watch:
\t@gh run list --limit 5
\t@gh run watch

-include tools/ci.mk
